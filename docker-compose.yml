version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: papier-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: papier
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-papier123}
      POSTGRES_DB: papier
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - papier-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U papier"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API Server (NestJS)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: papier-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://papier:${POSTGRES_PASSWORD:-papier123}@postgres:5432/papier
      - PORT=3000
    networks:
      - papier-network
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Starting server...' &&
        node dist/main.js
      "

  # Frontend Client (React/Vite) with Nginx
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: papier-client
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - server
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - papier-network

networks:
  papier-network:
    driver: bridge

volumes:
  postgres_data: