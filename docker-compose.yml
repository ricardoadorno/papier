version: '3.8'

# For improved security:
# 1. Create a .env file in the same directory as this docker-compose.yml
# 2. Add required environment variables to it (POSTGRES_PASSWORD, POSTGRES_USER, etc.)
# 3. Add .env to your .gitignore file to ensure it's not committed to source control

services:
  # PostgreSQL Database
  postgres:
    image: postgres:${POSTGRES_VERSION:-16}
    container_name: ${COMPOSE_PROJECT_NAME:-papier}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-papier}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Database password is required}
      POSTGRES_DB: ${POSTGRES_DB:-papier}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - papier-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-papier}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API Server (NestJS)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-papier}-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-papier}:${POSTGRES_PASSWORD:?Database password is required}@postgres:5432/${POSTGRES_DB:-papier}
      - PORT=${SERVER_PORT:-3000}
      - API_KEY=${API_KEY:-}
    networks:
      - papier-network
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Starting server...' &&
        node dist/main.js
      "

  # Frontend Client (React/Vite) with Nginx
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-papier}-client
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT:-80}:80"
      - "${CLIENT_SSL_PORT:-443}:443"
    depends_on:
      - server
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - papier-network

networks:
  papier-network:
    driver: bridge

volumes:
  postgres_data:
    name: ${COMPOSE_PROJECT_NAME:-papier}_postgres_data